% SUBBANDS = APPLY_FILTER_MULT(FILT, S, USE_ZP)
%
% applies filter to multiple column vectors
%
% filter is applied via multiplication in the frequency domain
%
% FILT contains coefficients for positive frequencies, e.g. as generated by
% make_erb_cos_filters, and must be of appropriate length for the signal S
%
% if USE_ZP is set to 1, S is zero-padded before filtering (filters must be
% twice as long in order for this to work)
%
% Dec 2012 -- Josh McDermott <jhm@mit.edu>

function subbands = apply_filter_mult(filt, s, use_zp)

if length(s)>200 && size(s,1)<size(s,2) %turn into column vector - if signal is short, assume it is a column vector
    s = s';
end
if use_zp
    s = [s;zeros(size(s))];
end
signal_length = size(s,1);
filt_length = size(filt,1);
fft_s = fft(s);
if rem(signal_length,2)==0 %even length - 
    fft_filt = [filt' fliplr(filt(2:filt_length-1,:)')]'; %generate negative frequencies in right place; filters are column vectors
else %odd length
    fft_filt = [filt' fliplr(filt(2:filt_length,:)')]';
end
fft_subband = (fft_filt*ones(1,size(s,2))).*(fft_s);%multiply by fft_s
subbands = real(ifft(fft_subband)); %ifft works on columns
if use_zp
    subbands = subbands(1:signal_length/2,:);
end
