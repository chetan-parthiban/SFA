% [MEASUREMENT_WIN] = SET_MEASUREMENT_WINDOW(SOUND_LENGTH, WINDOWING_OPTION, P)
%
% returns a windowing vector MEASUREMENT_WIN that can be used to measure
% statistics (principally to avoid boundary artifacts at the ends of a
% signal)
%
% the window is generated by summing a set of one-second windows with
% raised cosine edges, such that the first and last second fade from 0 to 1
% and back again
%
% expects signals that are an integer number of seconds
%
%

% This code is part of an instantiation of a sound texture synthesis
% algorithm developed with Eero Simoncelli and described in this paper:
%
% McDermott, J.H., Simoncelli, E.P. (2011) Sound texture perception via
% statistics of the auditory periphery: Evidence from sound synthesis.
% Neuron, 71, 926-940. 
%
% Dec 2012 -- Josh McDermott <jhm@mit.edu>

function [measurement_win] = set_measurement_window(sound_length, windowing_option, P)

ds_factor=P.audio_sr/P.env_sr;

if windowing_option==1
    ones_win = ones(sound_length/ds_factor,1);
    measurement_win = ones_win;
elseif windowing_option==2 %window is generated by summing a set of one-second windows with raised cosine edges 
    temp = make_windows_rcos_flat_no_ends(sound_length/ds_factor, round(sound_length/P.audio_sr), P.win_steepness);
    measurement_win = sum(temp,2);
end

